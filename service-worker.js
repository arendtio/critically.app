const s=location.pathname.split("/").slice(0,-1).join("/"),m=[s+"/_app/immutable/entry/app.613b9554.js",s+"/_app/immutable/assets/0.335c7fa2.css",s+"/_app/immutable/nodes/0.6f472f46.js",s+"/_app/immutable/nodes/1.f71a1250.js",s+"/_app/immutable/assets/2.9f99253d.css",s+"/_app/immutable/nodes/2.4cf8391c.js",s+"/_app/immutable/assets/3.cea9dbab.css",s+"/_app/immutable/nodes/3.f72ff94d.js",s+"/_app/immutable/assets/4.d07f5040.css",s+"/_app/immutable/nodes/4.63116b4b.js",s+"/_app/immutable/assets/5.61978959.css",s+"/_app/immutable/nodes/5.7bd60aa5.js",s+"/_app/immutable/assets/6.be79787e.css",s+"/_app/immutable/nodes/6.cb7e3af0.js",s+"/_app/immutable/nodes/7.6c8cd8a2.js",s+"/_app/immutable/assets/8.8080829f.css",s+"/_app/immutable/nodes/8.dff374c0.js",s+"/_app/immutable/chunks/assistant.store.e671b639.js",s+"/_app/immutable/chunks/criticalPath.store.a5bf573a.js",s+"/_app/immutable/chunks/each.1e7abf80.js",s+"/_app/immutable/chunks/gantt.store.6af8d8d6.js",s+"/_app/immutable/chunks/index.7c868b58.js",s+"/_app/immutable/chunks/index.940b5d13.js",s+"/_app/immutable/chunks/projectCharter.store.4bcdf42b.js",s+"/_app/immutable/chunks/scheduler.1fe6c427.js",s+"/_app/immutable/chunks/singletons.fbbe02d1.js",s+"/_app/immutable/chunks/tables.store.731d7076.js",s+"/_app/immutable/chunks/timeline.store.b24d5b93.js",s+"/_app/immutable/chunks/xyflow.store.2ccceb2e.js",s+"/_app/immutable/entry/start.f0fc7b31.js"],l=[s+"/.nojekyll",s+"/CNAME",s+"/android-chrome-192x192.png",s+"/android-chrome-512x512.png",s+"/apple-touch-icon.png",s+"/browserconfig.xml",s+"/favicon-16x16.png",s+"/favicon-32x32.png",s+"/favicon.ico",s+"/genetic.js",s+"/mstile-144x144.png",s+"/mstile-150x150.png",s+"/mstile-310x150.png",s+"/mstile-310x310.png",s+"/mstile-70x70.png",s+"/safari-pinned-tab.svg",s+"/site.webmanifest"],u="1739138294670",i=`cache-${u}`,p=[...m,...l];self.addEventListener("install",e=>{async function t(){await(await caches.open(i)).addAll(p)}e.waitUntil(t())});self.addEventListener("activate",e=>{async function t(){for(const a of await caches.keys())a!==i&&await caches.delete(a)}e.waitUntil(t())});self.addEventListener("fetch",e=>{if(e.request.method!=="GET")return;async function t(){const a=new URL(e.request.url),n=await caches.open(i);if(p.includes(a.pathname))return n.match(a.pathname);try{const c=await fetch(e.request);return c.status===200&&c.url.slice(0,4)==="http"&&n.put(e.request,c.clone()),c}catch{return n.match(e.request)}}e.respondWith(t())});
