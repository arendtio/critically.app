import{d as w}from"./index.6deb0bed.js";import{g as S}from"./tables.store.802e2f5f.js";import{l as v,c as A}from"./criticalPath.store.c7804fd0.js";import{g as R}from"./gantt.store.9f14c04c.js";function m(t,e,o,n){let i=t.slice(0,o),r=e.slice(o);return this.validateAndMerge(i,r,n)}function N(t,e,o){let n=t;e.forEach((s,l)=>{n=this.pushAfterPredecessors(s,n,o)});let i=new Map(Object.entries(o));n=n.filter((s,l,a)=>{let c=String(s.id),f=i.has(c);return i.delete(c),f});let r=Array.from(i.keys()).map(s=>({id:s}));return n=n.concat(r),n}function p(t,e,o){let n=o[t.id].predecessors;return n===void 0&&(n=[]),n.forEach((i,r,s)=>{let l=!1;for(let a=e.length-1;a>=0;a--)if(e[a].id===i){l=!0;break}l===!1&&(e=p({id:i},e,o))}),e.push(t),e}function G(t,e,o,n){return[t[e],t[o]]=[t[o],t[e]],t=this.validateAndMerge([],t,n),t}function L(t){let e=t.slice(0,1),o=t.slice(1).map(n=>{let i=n.slice(0,1);return i=i.concat(n.slice(1).map(r=>(r=="0"&&(r=""),{free:v(r),allocations:[]}))),i});return e=e.concat(o),e}let O=S("resources");function T(t){let e=Object.keys(t).map(o=>({id:o}));return e=this.validateAndMerge([],e,t),e}function x(t,e){return e[t].predecessors.reduce((i,r)=>{if(e[r].progress==="100 %"||e[r].progress==="100 %")return i;if(e[r].endDate===void 0)throw console.log("a predecessors has not been allocated, something is wrong..."),"predecessor not allocated";return i===void 0||e[r].endDate>i?e[r].endDate:i},void 0)}function F(t,e){return e.map(n=>n.map(r=>{let s=t[0].indexOf(r);return s<0&&(console.log("The resource",r,"in task",id,"is not defined in the resource table"),alert("The resource "+r+" in task "+id+" is not defined in the resource table")),s}))}function P(t,e,o,n){let i=0,r=n,s=t[e][o].free;if(isNaN(s)||s===0)return!1;for(;r>0;){if(e+i>=t.length)return!1;if(s=t[e+i][o].free,isNaN(s)){i++;continue}if(s===0)return!1;r-=s,i++}return r<=0}function E(t,e,o,n){return e.reduce((r,s)=>{let l=!0;for(let a=0;a<s.length;a++)if(!this.slotAvailable(t,o,s[a],n)){l=!1;break}return l&&r.push({resIdList:s,row:o}),r},[])}function J(t,e,o,n,i){let r,s=!0,l=-1,a=-1;if(i){for(let c=1;c<t.length;c++)i.startDate&&t[c][0]===i.startDate&&(l=c),i.endDate&&t[c][0]===i.endDate&&(a=c);if(i.startDate&&l===-1||i.endDate&&a===-1)return}for(let c=1;c<t.length;c++){if((o===void 0||t[c-1][0]===o)&&(s=!1),s||i&&i.startDate&&c!==l)continue;if(i&&i.endDate){let d=n,u=c,h=!1;for(;d>0&&u<=a;){let g=0;if(e[0].forEach(D=>{g+=t[u][D].free||0}),g===0){u++;continue}if(d-=g,d<=0){h=!0;break}u++}if(!h)continue}let f=this.availableSlotsForResourceLists(t,e,c,n);if(f.length>0){r=f[0];break}}return r}function C(t,e,o,n){if(!n)return[t,e];let i=t[n.row][0],r,s;const l=e[o];if(l.startDate&&i!==l.startDate)return[t,e];let a=-1;if(l.endDate){for(let f=1;f<t.length;f++)if(t[f][0]===l.endDate){a=f;break}}let c=!0;return l.expected,n.resIdList.forEach(f=>{let d=l.expected;for(let u=n.row;u<t.length;u++){if(a!==-1&&u>a){c=!1;break}let h=t[u][f].free;if(!isNaN(h))if(d>h)d-=h,t[u][f].allocations.push({task:o,amount:h}),t[u][f].free=0;else{t[u][f].free-=d,t[u][f].allocations.push({task:o,amount:d}),d=0,s=u,r=t[u][0];break}}d>0&&(c=!1)}),!c||l.endDate&&r!==l.endDate?[t,e]:(e[o].startDate=i,e[o].endDate=r,e[o].resIdList=e[o].resIdList.concat(n.resIdList),e[o].firstRow=n.row,e[o].lastRow=s,[t,e])}function j(t,e,o){return o=this.validateAndMerge([],o,e),o.forEach(n=>{if(e[n.id].progress==="100 %"||e[n.id].progress==="100 %")return;let i=this.earliestStartAllocation(n.id,e),r=this.convertResourcesToIdList(t,e[n.id].res),s=this.findFreeSlot(t,r,i,e[n.id].expected,e[n.id]);if(s===void 0){let l="Task "+n.id+" could not be allocated. Please provide more resources or adjust constraints.";console.error(l),alert(l)}[t,e]=this.writeAllocations(t,e,n.id,s)}),[t,e]}function z(t,e,o){let n={iterations:20,size:10,crossover:.3,mutation:.3,webWorkers:!0,skip:5},i={timetable:t,taskMap:e},r=Genetic.create();r.optimize=Genetic.Optimize.Minimize,r.select1=Genetic.Select1.Tournament2,r.select2=Genetic.Select2.Tournament2,r.initialGeneration=T,r.createChild=m,r.validateAndMerge=N,r.pushAfterPredecessors=p,r.mutateSwap=G,r.earliestStartAllocation=x,r.convertResourcesToIdList=F,r.slotAvailable=P,r.availableSlotsForResourceLists=E,r.findFreeSlot=J,r.writeAllocations=C,r.allocateGeneration=j,r.seed=function(){return this.initialGeneration(this.userData.taskMap)},r.mutate=function(s){let l=Math.floor(Math.random()*s.length),a=Math.floor(Math.random()*s.length);return this.mutateSwap(s,l,a,this.userData.taskMap)},r.crossover=function(s,l){let a=s.length,c=Math.floor(Math.random()*a),f=this.createChild(s,l,c,this.userData.taskMap);return[this.createChild(l,s,c,this.userData.taskMap),f]},r.fitness=function(s){let l=JSON.parse(JSON.stringify(this.userData.timetable)),a=JSON.parse(JSON.stringify(this.userData.taskMap));return[l,a]=this.allocateGeneration(l,a,s),Object.values(a).reduce((f,d)=>(d.lastRow>f&&(f=d.lastRow),f),-1)},r.generation=function(s,l,a){},r.notification=function(s,l,a,c){c&&([t,e]=this.allocateGeneration(t,e,s[0].entity),console.log("genetic finished"),o(t,e))},console.log("starting genetic"),r.evolve(n,i)}const q=w([A,O],([t,e],o)=>{let n=L(e.toJSON());if(t.map===void 0){console.log("criticalPath not calculated yet"),o(n);return}let i=JSON.parse(JSON.stringify(t));console.log("gantt",i),z(n,i.map,(r,s)=>{i.map=s,R.set(i),o(r)}),o(n)},[[],[]]);export{q as t};
