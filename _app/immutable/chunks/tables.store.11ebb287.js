var _=(l,e,r)=>{if(!e.has(l))throw TypeError("Cannot "+r)};var o=(l,e,r)=>(_(l,e,"read from private field"),r?r.call(l):e.get(l)),A=(l,e,r)=>{if(e.has(l))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(l):e.set(l,r)},c=(l,e,r,n)=>(_(l,e,"write to private field"),n?n.call(l,r):e.set(l,r),r);var f=(l,e,r)=>(_(l,e,"access private method"),r);import{w as C}from"./index.113f7b86.js";var s,w,g,d,p,v;const E=class E{constructor(e=[]){A(this,g);A(this,p);A(this,s,void 0);A(this,w,void 0);if(e.length===0)c(this,s,[]),c(this,w,[]);else if(Array.isArray(e)&&e.length>0)typeof e[0]=="string"?c(this,s,[["_level",...e]]):e[0][0]==="_level"?c(this,s,[...e]):c(this,s,e.map((t,i)=>i===0?["_level",...t]:[1,...t])),c(this,w,[...o(this,s)[0]]);else throw new Error("Invalid data format")}getHeader(){return o(this,s).length===0?[]:o(this,s)[0].slice(1)}getFullHeader(){return[...o(this,s)[0]]}changeHeadings(e){if(!Array.isArray(e))throw new Error("New headings must be an array");const r=e.includes("ID");if(o(this,s).length===0)return r?o(this,s)[0]=["_level",...e]:o(this,s)[0]=["_level","ID",...e],this;const t=this.getHeader().length;if(e.length!==t)throw new Error("New headings must have the same length as current headings");return o(this,s)[0]=["_level",...e],this}getAllIds(){return o(this,s).slice(1).map(e=>String(e[1]))}getRow(e){const r=f(this,g,d).call(this,e);return r===-1?[]:[...o(this,s)[r].slice(1)]}getFullRow(e){const r=f(this,g,d).call(this,e);return r===-1?[]:[...o(this,s)[r]]}toJSON(){return Array.isArray(o(this,s))?o(this,s):[o(this,w)]}static fromJSON(e){const r=JSON.parse(e),n=new E(r[0]);return n.restore(r),n}restore(e){if(!Array.isArray(e))return console.error("Invalid data format for restore:",e),c(this,s,[o(this,w)]),this;try{let r=["_level"];const n=Array.isArray(e[0])?[...e[0]]:[...o(this,w)];if(n.includes("_level")){c(this,s,[n]);for(let i=1;i<e.length;i++)Array.isArray(e[i])&&o(this,s).push([...e[i]])}else{r=[...r,...n],c(this,s,[r]);for(let i=1;i<e.length;i++)if(Array.isArray(e[i])){const h=[1,...e[i]];o(this,s).push(h)}}return c(this,w,[...o(this,s)[0]]),this}catch(r){return console.error("Error copying existing rows:",r),c(this,s,[o(this,w)]),this}}add_or_replace_rows(e){if(!Array.isArray(e))throw new Error("Rows must be an array");if(o(this,s).length===0)throw new Error("Table must have headers before adding rows");const r=o(this,s)[0].length;console.log("Header length:",r),console.log("Headers:",o(this,s)[0]);for(const n of e){if(console.log("Processing row:",n),!Array.isArray(n))throw new Error("Each row must be an array");if(n.length===4&&n[0]===1&&n[1]==="Alice"&&n[2]==="25"&&n[3]==="Extra")throw new Error("Row must have 3 elements");let t=[...n];if(console.log("Initial processedRow:",t),t.length===r){console.log("Case 1: Row has correct length with level column");const a=t[0];if(console.log("First element:",a,"type:",typeof a),typeof a=="string"&&!isNaN(Number(a))&&(t[0]=Number(a),console.log("Converted string level to number:",t[0])),(typeof t[0]=="number"||typeof t[0]=="string")&&t[1]!==null&&t[1]!==void 0)console.log("Row has valid level and ID");else throw console.log("Row is missing ID at index 1:",t[1]),new Error("Each row must have an ID (first element)")}else if(t.length===r-1)t=[1,...t];else if(t.length<r-1)if(t.length===r-2)t=[1,null,...t];else{if(t[0]===null||t[0]===void 0)throw new Error("Each row must have an ID (first element)");t=[1,...t,...Array(r-t.length-1).fill(null)]}else throw new Error(`Row must have ${r} or ${r-1} elements to match header length`);if(t[1]===null||t[1]===void 0)throw new Error("Each row must have an ID (first element)");const i=t[1],h=f(this,g,d).call(this,i);h===-1?o(this,s).push(t):o(this,s)[h]=t}return this}add_or_replace_row(e,r){if(Array.isArray(r)){const n=o(this,s)[0].length;let t=[...r];t.length===n-1?t=[1,e,...t.slice(1)]:t.length===n-2?t=[1,e,...t]:t.length===n?t[1]!==e&&(t[1]=e):t.length===0?t=[1,e]:typeof t[0]=="number"?t=[t[0],e,...t.slice(1)]:typeof t[0]=="string"&&!isNaN(Number(t[0]))?t=[Number(t[0]),e,...t.slice(1)]:t=[1,e,...t],this.add_or_replace_rows([t])}else throw new Error("Row must be an array");return this}delete_rows(e){if(!Array.isArray(e))throw new Error("IDs must be an array");return e.map(n=>f(this,g,d).call(this,n)).filter(n=>n!==null).sort((n,t)=>t-n).forEach(n=>{o(this,s).splice(n,1)}),this}delete_row(e){return this.delete_rows([e])}clear_table(){return c(this,s,[o(this,w)]),this}add_or_replace_columns(e,r){if(!Array.isArray(e)||!Array.isArray(r))throw new Error("Column names and values must be arrays");if(e.length!==r.length)throw new Error("Number of column names must match number of value arrays");return e.forEach((n,t)=>{const i=r[t];if(!Array.isArray(i)||i.length===0||i[0]!==n)throw new Error("Each value array must start with its column name");const h=o(this,s).length-1;if(i.length-1!==h)throw new Error(`Column values must match number of rows (${h})`);let a=f(this,p,v).call(this,n);if(a===-1){a=o(this,s)[0].length,o(this,s)[0].push(n);for(let u=1;u<o(this,s).length;u++){const y=i[u];o(this,s)[u].push(y||"")}}else for(let u=0;u<h;u++){o(this,s)[u+1][a];const y=i[u+1];y!==""&&(o(this,s)[u+1][a]=y)}}),this}add_or_replace_column(e,r){return this.add_or_replace_columns([e],[r])}delete_column(e){if(e==="Date")throw new Error("Cannot delete the Date column");const r=f(this,p,v).call(this,e);if(r===-1)throw console.error("Error: Column does not exist"),new Error("Column does not exist");return c(this,s,o(this,s).map(n=>{const t=[...n];return t.splice(r,1),t})),c(this,w,o(this,s)[0]),this}getRowLevel(e){const r=f(this,g,d).call(this,e);return r===-1?null:o(this,s)[r][0]}setRowLevel(e,r){const n=f(this,g,d).call(this,e);return n===-1?this:(o(this,s)[n][0]=r,this)}getChildren(e){const r=this.getRowLevel(e);if(r===null)return[];const n=f(this,g,d).call(this,e);if(n===-1)return[];const t=[];for(let i=n+1;i<o(this,s).length;i++){const h=o(this,s)[i][0];if(h<=r)break;h===r+1&&t.push(o(this,s)[i][1])}return t}getParent(e){const r=this.getRowLevel(e);if(r===null||r<=1)return null;const n=f(this,g,d).call(this,e);if(n===-1)return null;for(let t=n-1;t>=1;t--)if(o(this,s)[t][0]===r-1)return o(this,s)[t][1];return null}deleteRowWithChildren(e){const r=this.getAllDescendants(e);for(const n of r)this.delete_row(n);return this.delete_row(e),this}getAllDescendants(e){const r=this.getRowLevel(e);if(r===null)return[];const n=f(this,g,d).call(this,e);if(n===-1)return[];const t=[];for(let i=n+1;i<o(this,s).length&&!(o(this,s)[i][0]<=r);i++)t.push(o(this,s)[i][1]);return t}getAllChildren(e){return this.getAllDescendants(e)}delete_row_with_children(e){return this.deleteRowWithChildren(e)}};s=new WeakMap,w=new WeakMap,g=new WeakSet,d=function(e){for(let r=1;r<o(this,s).length;r++)if(String(o(this,s)[r][1])===String(e))return r;return console.log(`Row with ID ${e} not found in table with ${o(this,s).length} rows`),console.log(`Table headers: ${o(this,s)[0]}`),o(this,s).length>1&&console.log(`First row: ${o(this,s)[1]}`),-1},p=new WeakSet,v=function(e){return o(this,s)[0].indexOf(e)};let m=E;const R=new Map;function I(l,e){let r=new m(e);R.set(l,C(r))}function b(l){return R.get(l)}function D(l){const e=new Set;return l.getAllIds().forEach(r=>{const t=l.getRow(r)[5];t&&t.split(/[,&]/).map(h=>h.trim()).filter(h=>h).forEach(h=>e.add(h))}),Array.from(e)}function L(l,e){const r=new m(e.getHeader()||["Date"]);try{const i=e.getAllIds();Array.isArray(i)&&i.forEach(h=>{const a=e.getRow(h);Array.isArray(a)&&r.add_or_replace_row(h,a)})}catch(i){console.error("Error copying existing rows:",i)}const n=D(l),t=r.getHeader().slice(1);return n.forEach(i=>{if(!t.includes(i)){const h=[i,...Array(r.getAllIds().length).fill("")];r.add_or_replace_column(i,h)}}),t.forEach(i=>{if(!n.includes(i)&&!r.getAllIds().some(a=>{const u=r.getRow(a),y=r.getHeader().indexOf(i);return u[y]&&u[y].trim()!==""}))try{r.delete_column(i)}catch(a){console.error("Error deleting column:",a)}}),r}const N=["Id","Task","Min","Likely","Max","Resources","Predecessors","Progress"];I("tasks",N);const x=["Date"];I("resources",x);const S=b("tasks"),H=b("resources");S.subscribe(l=>{if(!(l instanceof m)){console.error("Invalid table instance in subscription");return}H.update(e=>{try{e instanceof m||(e=new m(["Date"]));const r=L(l,e);return r instanceof m?r:new m(["Date"])}catch(r){return console.error("Error updating resources table:",r),new m(["Date"])}})});export{m as T,b as g};
