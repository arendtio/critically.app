import{d as D}from"./index.113f7b86.js";import{g as v}from"./tables.store.e0a4b897.js";import{l as S,c as A}from"./criticalPath.store.ae9912cc.js";import{g as R}from"./gantt.store.04b1ec4c.js";function m(e,t,i,n){let o=e.slice(0,i),r=t.slice(i);return this.validateAndMerge(o,r,n)}function L(e,t,i){let n=e;t.forEach((l,s)=>{n=this.pushAfterPredecessors(l,n,i)});let o=new Map(Object.entries(i));n=n.filter((l,s,a)=>{let c=String(l.id),u=o.has(c);return o.delete(c),u});let r=Array.from(o.keys()).map(l=>({id:l}));return n=n.concat(r),n}function w(e,t,i){let n=i[e.id].predecessors;return n===void 0&&(n=[]),n.forEach((o,r,l)=>{let s=!1;for(let a=t.length-1;a>=0;a--)if(t[a].id===o){s=!0;break}s===!1&&(t=w({id:o},t,i))}),t.push(e),t}function N(e,t,i,n){return[e[t],e[i]]=[e[i],e[t]],e=this.validateAndMerge([],e,n),e}function G(e){const i=e[0][0]==="_level"?1:0;let n=[e[0].slice(i)],o=e.slice(1).map(r=>r.slice(i,i+1).concat(r.slice(i+1).map(a=>(a=="0"&&(a=""),{free:S(a),allocations:[]}))));return n=n.concat(o),n}let O=v("resources");function T(e){let t=Object.keys(e).map(i=>({id:i}));return t=this.validateAndMerge([],t,e),t}function x(e,t){return t[e].predecessors.reduce((o,r)=>{if(t[r].progress==="100 %"||t[r].progress==="100 %")return o;if(t[r].endDate===void 0)throw console.log("a predecessors has not been allocated, something is wrong..."),"predecessor not allocated";return o===void 0||t[r].endDate>o?t[r].endDate:o},void 0)}function C(e,t){return t.map(n=>n.map(r=>{let l=e[0].indexOf(r);return l<0&&(console.log("The resource",r,"in task",id,"is not defined in the resource table"),alert("The resource "+r+" in task "+id+" is not defined in the resource table")),l}))}function F(e,t,i,n){let o=0,r=n,l=e[t][i].free;if(isNaN(l)||l===0)return!1;for(;r>0;){if(t+o>=e.length)return!1;if(l=e[t+o][i].free,isNaN(l)){o++;continue}if(l===0)return!1;r-=l,o++}return r<=0}function P(e,t,i,n){return t.reduce((r,l)=>{let s=!0;for(let a=0;a<l.length;a++)if(!this.slotAvailable(e,i,l[a],n)){s=!1;break}return s&&r.push({resIdList:l,row:i}),r},[])}function E(e,t,i,n,o){let r,l=!0,s=-1,a=-1;if(o){for(let c=1;c<e.length;c++)o.startDate&&e[c][0]===o.startDate&&(s=c),o.endDate&&e[c][0]===o.endDate&&(a=c);if(o.startDate&&s===-1||o.endDate&&a===-1)return}for(let c=1;c<e.length;c++){if((i===void 0||e[c-1][0]===i)&&(l=!1),l||o&&o.startDate&&c!==s)continue;if(o&&o.endDate){let d=n,f=c,h=!1;for(;d>0&&f<=a;){let g=0;if(t[0].forEach(p=>{g+=e[f][p].free||0}),g===0){f++;continue}if(d-=g,d<=0){h=!0;break}f++}if(!h)continue}let u=this.availableSlotsForResourceLists(e,t,c,n);if(u.length>0){r=u[0];break}}return r}function J(e,t,i,n){if(!n)return[e,t];let o=e[n.row][0],r,l;const s=t[i];if(s.startDate&&o!==s.startDate)return[e,t];let a=-1;if(s.endDate){for(let u=1;u<e.length;u++)if(e[u][0]===s.endDate){a=u;break}}let c=!0;return s.expected,n.resIdList.forEach(u=>{let d=s.expected;for(let f=n.row;f<e.length;f++){if(a!==-1&&f>a){c=!1;break}let h=e[f][u].free;if(!isNaN(h))if(d>h)d-=h,e[f][u].allocations.push({task:i,amount:h}),e[f][u].free=0;else{e[f][u].free-=d,e[f][u].allocations.push({task:i,amount:d}),d=0,l=f,r=e[f][0];break}}d>0&&(c=!1)}),!c||s.endDate&&r!==s.endDate?[e,t]:(t[i].startDate=o,t[i].endDate=r,t[i].resIdList=t[i].resIdList.concat(n.resIdList),t[i].firstRow=n.row,t[i].lastRow=l,[e,t])}function j(e,t,i){return i=this.validateAndMerge([],i,t),i.forEach(n=>{if(t[n.id].progress==="100 %"||t[n.id].progress==="100 %")return;let o=this.earliestStartAllocation(n.id,t),r=this.convertResourcesToIdList(e,t[n.id].res),l=this.findFreeSlot(e,r,o,t[n.id].expected,t[n.id]);if(l===void 0){let s="Task "+n.id+" could not be allocated. Please provide more resources or adjust constraints.";console.error(s),alert(s)}[e,t]=this.writeAllocations(e,t,n.id,l)}),[e,t]}function z(e,t,i){let n={iterations:20,size:10,crossover:.3,mutation:.3,webWorkers:!0,skip:5},o={timetable:e,taskMap:t},r=Genetic.create();r.optimize=Genetic.Optimize.Minimize,r.select1=Genetic.Select1.Tournament2,r.select2=Genetic.Select2.Tournament2,r.initialGeneration=T,r.createChild=m,r.validateAndMerge=L,r.pushAfterPredecessors=w,r.mutateSwap=N,r.earliestStartAllocation=x,r.convertResourcesToIdList=C,r.slotAvailable=F,r.availableSlotsForResourceLists=P,r.findFreeSlot=E,r.writeAllocations=J,r.allocateGeneration=j,r.seed=function(){return this.initialGeneration(this.userData.taskMap)},r.mutate=function(l){let s=Math.floor(Math.random()*l.length),a=Math.floor(Math.random()*l.length);return this.mutateSwap(l,s,a,this.userData.taskMap)},r.crossover=function(l,s){let a=l.length,c=Math.floor(Math.random()*a),u=this.createChild(l,s,c,this.userData.taskMap);return[this.createChild(s,l,c,this.userData.taskMap),u]},r.fitness=function(l){let s=JSON.parse(JSON.stringify(this.userData.timetable)),a=JSON.parse(JSON.stringify(this.userData.taskMap));return[s,a]=this.allocateGeneration(s,a,l),Object.values(a).reduce((u,d)=>(d.lastRow>u&&(u=d.lastRow),u),-1)},r.generation=function(l,s,a){},r.notification=function(l,s,a,c){c&&([e,t]=this.allocateGeneration(e,t,l[0].entity),console.log("genetic finished"),i(e,t))},console.log("starting genetic"),r.evolve(n,o)}const _=D([A,O],([e,t],i)=>{let n=G(t.toJSON());if(e.map===void 0){console.log("criticalPath not calculated yet"),i(n);return}let o=JSON.parse(JSON.stringify(e));console.log("gantt",o),z(n,o.map,(r,l)=>{o.map=l,R.set(o),i(r)}),i(n)},[[],[]]);export{_ as t};
