var b=(a,e,o)=>{if(!e.has(a))throw TypeError("Cannot "+o)};var l=(a,e,o)=>(b(a,e,"read from private field"),o?o.call(a):e.get(a)),h=(a,e,o)=>{if(e.has(a))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(a):e.set(a,o)},v=(a,e,o,r)=>(b(a,e,"write to private field"),r?r.call(a,o):e.set(a,o),o);var m=(a,e,o)=>(b(a,e,"access private method"),o);import{w as M}from"./index.113f7b86.js";import{g as B}from"./tables.store.e0a4b897.js";import{O as G}from"./scheduler.427c93e9.js";var n,w,d,x,y,O,E,T,$,F,P,A;class J{constructor(){h(this,y);h(this,E);h(this,$);h(this,P);h(this,n,void 0);h(this,w,[]);h(this,d,[]);h(this,x,void 0);v(this,n,new Map),v(this,x,new Map)}addTask(e,o,r,s,c,i,p,u,t=null,f=null){if(r=j(r),s=j(s),c=j(c),isNaN(r)||isNaN(s)||isNaN(c))throw new Error(`Invalid duration values for task "${e}": min=${r}, likely=${s}, max=${c}`);i=i.split(",").map(g=>g.split("&").map(_=>_.trim()));let N=p.split(",").map(g=>g.trim()).filter(g=>g!=="");N.forEach(g=>{if(g===e.toString())throw new Error(`Task "${e}" cannot have itself as a predecessor.`)}),t&&!isNaN(new Date(t).getTime())?t=t:t=null,f&&!isNaN(new Date(f).getTime())?f=f:f=null;let L=Math.round((r+s*4+c)/6),z={id:e,name:o,min:r,likely:s,max:c,res:i,resIdList:[],predecessors:new Set(N),successors:new Set,progress:u,earlyCol:1,es:0,ef:0,ls:0,lf:0,slack:-1,expected:L,startDate:t,endDate:f};l(this,n).set(e,z)}getTask(e){return l(this,n).get(e)}calc(){return m(this,y,O).call(this),m(this,$,F).call(this),m(this,P,A).call(this),{starts:l(this,w),map:Object.fromEntries(l(this,n)),ends:l(this,d)}}}n=new WeakMap,w=new WeakMap,d=new WeakMap,x=new WeakMap,y=new WeakSet,O=function(){l(this,n).forEach(e=>{e.predecessors.forEach(o=>{if(!l(this,n).has(o))throw new Error(`Task "${e.id}" references predecessor "${o}" which does not exist.`)})}),l(this,n).forEach(e=>{e.predecessors.forEach(o=>{l(this,n).get(o).successors.add(e.id)})}),v(this,w,[...l(this,n).values()].filter(e=>e.predecessors.size===0).map(e=>e.id)),v(this,d,[...l(this,n).values()].filter(e=>e.successors.size===0).map(e=>e.id))},E=new WeakSet,T=function(e,o,r,s){if(r.has(e))return;r.add(e);let c=l(this,n).get(e);c[o].forEach(i=>{m(this,E,T).call(this,i,o,r,s)}),c=s(c),l(this,n).set(c.id,c)},$=new WeakSet,F=function(){let e=new Set;l(this,d).forEach(o=>{m(this,E,T).call(this,o,"predecessors",e,r=>{let s=[...r.predecessors].map(i=>l(this,n).get(i)).reduce((i,p)=>i<p.ef?p.ef:i,0),c=[...r.predecessors].map(i=>l(this,n).get(i)).reduce((i,p)=>i<p.earlyCol?p.earlyCol:i,0);return r.earlyCol=c+1,r.es=s+1,r.ef=r.es+r.expected-1,r})})},P=new WeakSet,A=function(){let e=Math.max(...l(this,d).map(r=>l(this,n).get(r).ef)),o=new Set;l(this,w).forEach(r=>{m(this,E,T).call(this,r,"successors",o,s=>{let c=[...s.successors].map(i=>l(this,n).get(i)).reduce((i,p)=>i<p.ls?i:p.ls,e+1);return s.lf=c-1,s.ls=s.lf-s.expected+1,s.slack=s.ls-s.es,s})})};const S=M({}),C=M(void 0);function j(a,e){e===void 0&&(e=navigator.languages&&navigator.languages.length?navigator.languages[0]:navigator.language);let[,o,,,,r]=1111.1.toLocaleString(e);return a=Array.from(""+a,s=>s===o?"":s===r?".":s).join(""),parseFloat(a)}S.reset=()=>S.set({});C.reset=()=>C.set(void 0);S.calculate=function(){C.set(void 0);let a;B("tasks").update(t=>(a=t,t));let o=new J,r=[];if(a.getAllIds().forEach(t=>{let f=a.getRow(t);try{o.addTask(...f)}catch(N){r.push(N.message)}}),r.length>0){const t=`Please fix the following issues:

`+r.join(`
`);alert(t);return}console.log("Starting calculation");let s;try{s=o.calc()}catch(t){alert("Error during critical path calculation: "+t.message);return}let c=new Map;for(var i in s.map)if(Object.prototype.hasOwnProperty.call(s.map,i)){let t=s.map[i];t.predecessors=[...t.predecessors],c.set(t.id,t)}s.map=Object.fromEntries(c);const u=G(S).map||{};console.log("Existing positions before preservation:",u),Object.keys(s.map).forEach(t=>{console.log(`Task ${t} - Before:`,s.map[t]),u[t]?(console.log(`Existing position for ${t}:`,u[t]),s.map[t].x=u[t].x,s.map[t].y=u[t].y,console.log(`Task ${t} - After:`,s.map[t])):console.log(`Task ${t} - No existing position found`)}),console.log("Final positions after preservation:",s.map),console.log("Finished calculation: ",JSON.stringify(s)),S.set(s)};export{S as c,C as d,j as l};
